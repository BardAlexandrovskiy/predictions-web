{"version":3,"sources":["App/styles.js","components/Footer/styles.js","components/Footer/index.js","screens/CrystalBallScreen/styles.js","components/Alert/styles.js","components/Alert/index.js","constants/magicBallAnswersArr.js","screens/CrystalBallScreen/index.js","constants/getRandomIntFunction.js","actions/magicBallAction.js","screens/PredictionScreen/styles.js","screens/PredictionScreen/index.js","actions/predictionAction.js","screens/HatScreen/styles.js","screens/HatScreen/index.js","actions/hatAction.js","router/index.js","reducers/magicBall.js","reducers/prediction.js","reducers/hat.js","reducers/index.js","store/index.js","App/index.js","serviceWorker.js","index.js"],"names":["GlobalStyle","createGlobalStyle","FooterContainer","styled","footer","Link","NavLink","Footer","exact","to","Container","div","MagicBall","props","translateY","ScoreboardAnswers","AnsverText","p","opacity","AnswerButton","button","ReloadButton","LockContainer","AlertContainer","Description","Button","Alert","text","handleClick","onClick","magicBallAnswersArr","CrystalBallScreen","componentDidUpdate","isDescriptionAlert","localStorage","setItem","JSON","stringify","getAnswer","setState","disabledButton","translate","translateReverse","intervalId","setInterval","max","textOpacity","clearInterval","answer","Math","floor","random","reloadPage","state","this","hideMagicBallDescriptionAlertAction","disabled","React","Component","mapDispatchToProps","type","connect","magicBall","PredictionScreen","hidePredictionDescriptionAlertAction","prediction","HatScreen","hideHatDescriptionAlertAction","hat","Router","path","component","initialState","parse","getItem","rootReducer","combineReducers","action","store","createStore","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5f55553c.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css?family=Roboto&display=swap');\n  * {\n    padding: 0;\n    margin: 0;\n    font-family: 'Roboto', sans-serif;\n    border: 0;\n    outline: 0;\n    background-color: transparent;\n    word-wrap: break-word;\n    box-sizing: border-box;\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  }\n\n  html, body, #root {\n    height: 100%;\n  }\n  body {\n    min-width: 320px;\n  }\n\n  button {\n    cursor: pointer;\n    transition: transform 0.2s;\n  }\n\n  button:active {\n    transform: scale(1.1);\n  }\n\n  .active {\n    opacity: 0.5;\n    background-color: #182d4e;\n  }\n`;\n\nexport default GlobalStyle;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const FooterContainer = styled.footer`\n  height: 60px;\n  background-color: #3c6fc2;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const Link = styled(NavLink)`\n  font-size: 20px;\n  color: white;\n  text-decoration: none;\n  width: 33.33%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: background-color 0.2s, opacity 0.2s;\n\n  @media (max-width: 736px) {\n    font-size: 17px;\n  }\n\n  @media (max-width: 360px) {\n    font-size: 14px;\n  }\n`;\n","import React from 'react';\nimport { FooterContainer, Link } from './styles';\n\nconst Footer = () => {\n  return (\n    <FooterContainer>\n      <Link exact to=\"/\">\n        Magic 8 ball\n      </Link>\n      <Link to=\"/prediction\">Предсказания</Link>\n      <Link to=\"/hat\">Шапка</Link>\n    </FooterContainer>\n  );\n};\n\nexport default Footer;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  height: calc(100% - 60px);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  background-color: whitesmoke;\n  padding: 20px;\n`;\n\nexport const MagicBall = styled.div`\n  height: 400px;\n  width: 400px;\n  border-radius: 200px;\n  background-color: #191919;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: linear-gradient(to top right, black 33%, #171717 66%, gray 100%);\n  transform: translateY(${(props) => props.translateY}px);\n\n  @media (max-width: 736px) {\n    width: 350px;\n    height: 350px;\n  }\n\n  @media (max-width: 360px) {\n    width: 300px;\n    height: 300px;\n  }\n`;\n\nexport const ScoreboardAnswers = styled.div`\n  height: 200px;\n  width: 200px;\n  border-radius: 100px;\n  background-color: white;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  text-align: center;\n  padding: 5px;\n\n  @media (max-width: 360px) {\n    width: 185px;\n    height: 185px;\n  }\n`;\n\nexport const AnsverText = styled.p`\n  color: black;\n  opacity: ${(props) => props.opacity};\n  font-size: 20px;\n  line-height: 20px;\n\n  @media (max-width: 360px) {\n    font-size: 16px;\n  }\n`;\n\nexport const AnswerButton = styled.button`\n  background-color: lightgray;\n  padding: 20px 40px;\n  border-radius: 10px;\n  color: black;\n  font-size: 20px;\n`;\n\nexport const ReloadButton = styled.button`\n  padding: 5px;\n  border-radius: 5px;\n  background-color: #3c6fc2;\n  color: white;\n  font-size: 20px;\n  align-self: flex-end;\n`;\n","import styled from 'styled-components';\n\nexport const LockContainer = styled.div`\n  background-color: transparent;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 60px;\n  left: 0;\n  z-index: 5;\n  background-color: rgba(128, 128, 128, 0.5);\n`;\n\nexport const AlertContainer = styled.div`\n  display: flex;\n  background-color: #244375;\n  width: 50%;\n  min-height: 450px;\n  justify-content: space-around;\n  padding: 20px;\n  align-items: center;\n  border-radius: 20px;\n  flex-direction: column;\n\n  @media (max-width: 736px) {\n    width: 90%;\n  }\n`;\n\nexport const Description = styled.p`\n  font-size: 20px;\n  text-align: center;\n  color: white;\n`;\n\nexport const Button = styled.button`\n  background-color: #3c6dc3;\n  color: white;\n  padding: 20px 40px;\n  border-radius: 10px;\n  font-size: 20px;\n`;\n","import React from 'react';\nimport { LockContainer, AlertContainer, Description, Button } from './styles';\n\nconst Alert = ({ text, handleClick }) => {\n  return (\n    <LockContainer>\n      <AlertContainer>\n        <Description>{text}</Description>\n        <Button onClick={() => handleClick()}>Ок</Button>\n      </AlertContainer>\n    </LockContainer>\n  );\n};\n\nexport default Alert;\n","const magicBallAnswersArr = [\n  'Бесспорно',\n  'Предрешено',\n  'Никаких сомнений',\n  'Определённо да',\n  'Можешь быть уверен в этом',\n  'Мне кажется — «да»',\n  'Вероятнее всего',\n  'Хорошие перспективы',\n  'Знаки говорят — «да»',\n  'Да',\n  'Пока не ясно, попробуй снова',\n  'Спроси позже',\n  'Лучше не рассказывать',\n  'Сейчас нельзя предсказать',\n  'Сконцентрируйся и спроси опять',\n  'Даже не думай',\n  'Мой ответ — «нет»',\n  'По моим данным — «нет»',\n  'Перспективы не очень хорошие',\n  'Весьма сомнительно',\n  'А все уже, а надо было раньше',\n];\n\nexport default magicBallAnswersArr;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Container,\n  ScoreboardAnswers,\n  AnsverText,\n  AnswerButton,\n  MagicBall,\n  ReloadButton,\n} from './styles';\nimport Alert from '../../components/Alert';\nimport { hideMagicBallDescriptionAlert } from '../../actions/magicBallAction';\nimport getRandomInt from '../../constants/getRandomIntFunction';\nimport magicBallAnswersArr from '../../constants/magicBallAnswersArr';\n\nclass CrystalBallScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      answer: 'Спроси меня!',\n      textOpacity: 1,\n      disabledButton: false,\n      translateY: 0,\n    };\n  }\n\n  componentDidUpdate = () => {\n    const { isDescriptionAlert } = this.props;\n    localStorage.setItem('magicBall', JSON.stringify({ isDescriptionAlert }));\n  };\n\n  getAnswer = () => {\n    this.setState({ disabledButton: true });\n    let opacity = 1;\n    let translate = 0;\n    let translateReverse = false;\n    let intervalId = setInterval(() => {\n      if (translate < 12 && !translateReverse) {\n        translate += 2;\n        this.setState({ translateY: translate });\n        if (translate === 12) {\n          translateReverse = true;\n        }\n      } else if (translate >= -12 && translateReverse) {\n        translate -= 2;\n        this.setState({ translateY: translate });\n        if (translate === -12) {\n          translateReverse = false;\n        }\n      }\n      if (opacity > 0) {\n        opacity -= 0.02;\n        this.setState({ textOpacity: opacity });\n      } else {\n        clearInterval(intervalId);\n        this.setState({\n          answer: magicBallAnswersArr[getRandomInt(21)],\n          translateY: 0,\n        });\n        intervalId = setInterval(() => {\n          if (opacity < 1) {\n            opacity += 0.025;\n            this.setState({ textOpacity: opacity });\n          } else {\n            clearInterval(intervalId);\n            this.setState({ disabledButton: false });\n          }\n        }, 20);\n      }\n    }, 20);\n  };\n\n  reloadPage = () => {\n    this.setState({ answer: 'Спроси меня!' });\n  };\n\n  render() {\n    const { answer, textOpacity, disabledButton, translateY } = this.state;\n    const {\n      isDescriptionAlert,\n      hideMagicBallDescriptionAlertAction,\n    } = this.props;\n    return (\n      <Container>\n        {isDescriptionAlert && (\n          <Alert\n            text=\"Ляляляля, тополя и магический шар! ЧУДЕСА!\"\n            handleClick={hideMagicBallDescriptionAlertAction}\n          />\n        )}\n        <ReloadButton onClick={this.reloadPage} disabled={disabledButton}>\n          Перезагрузка\n        </ReloadButton>\n        <MagicBall translateY={translateY}>\n          <ScoreboardAnswers>\n            <AnsverText opacity={textOpacity}>{answer}</AnsverText>\n          </ScoreboardAnswers>\n        </MagicBall>\n        <AnswerButton onClick={this.getAnswer} disabled={disabledButton}>\n          Получить ответ\n        </AnswerButton>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { isDescriptionAlert } = state.magicBall;\n  return { isDescriptionAlert };\n};\n\nconst mapDispatchToProps = {\n  hideMagicBallDescriptionAlertAction: hideMagicBallDescriptionAlert,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CrystalBallScreen);\n","export default function getRandomInt(max) {\n  return Math.floor(Math.random() * Math.floor(max));\n}\n","export const HIDE_MAGIC_BALL_DESCRIPTION_ALERT =\n  'HIDE_MAGIC_BALL_DESCRIPTION_ALERT';\n\nexport function hideMagicBallDescriptionAlert() {\n  return {\n    type: HIDE_MAGIC_BALL_DESCRIPTION_ALERT,\n  };\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  height: calc(100% - 60px);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  background-color: whitesmoke;\n  padding: 20px;\n  text-align: center;\n`;\n","import React from 'react';\nimport { Container } from './styles';\nimport { connect } from 'react-redux';\nimport Alert from '../../components/Alert';\nimport { hidePredictionDescriptionAlert } from '../../actions/predictionAction';\n\nclass PredictionScreen extends React.Component {\n  componentDidUpdate = () => {\n    const { isDescriptionAlert } = this.props;\n    localStorage.setItem('prediction', JSON.stringify({ isDescriptionAlert }));\n  };\n\n  render() {\n    const {\n      isDescriptionAlert,\n      hidePredictionDescriptionAlertAction,\n    } = this.props;\n    return (\n      <Container>\n        {isDescriptionAlert && (\n          <Alert\n            text=\"Вытяни свое предсказание на день! О, почтенный!\"\n            handleClick={hidePredictionDescriptionAlertAction}\n          />\n        )}\n        <h1>Ожидается в скором времени!</h1>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { isDescriptionAlert } = state.prediction;\n  return { isDescriptionAlert };\n};\n\nconst mapDispatchToProps = {\n  hidePredictionDescriptionAlertAction: hidePredictionDescriptionAlert,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PredictionScreen);\n","export const HIDE_PREDICTION_DESCRIPTION_ALERT =\n  'HIDE_PREDICTION_DESCRIPTION_ALERT';\n\nexport function hidePredictionDescriptionAlert() {\n  return {\n    type: HIDE_PREDICTION_DESCRIPTION_ALERT,\n  };\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  height: calc(100% - 60px);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  background-color: whitesmoke;\n  padding: 20px;\n  text-align: center;\n`;\n","import React from 'react';\nimport { Container } from './styles';\nimport { connect } from 'react-redux';\nimport Alert from '../../components/Alert';\nimport { hideHatDescriptionAlert } from '../../actions/hatAction';\n\nclass HatScreen extends React.Component {\n  componentDidUpdate = () => {\n    const { isDescriptionAlert } = this.props;\n    localStorage.setItem('hat', JSON.stringify({ isDescriptionAlert }));\n  };\n\n  render() {\n    const { isDescriptionAlert, hideHatDescriptionAlertAction } = this.props;\n    return (\n      <Container>\n        {isDescriptionAlert && (\n          <Alert\n            text=\"Не можешь что-то выбрать? Напиши варианты и кинь в шапку, а она решит за тебя!\"\n            handleClick={hideHatDescriptionAlertAction}\n          />\n        )}\n        <h1>Ожидается в скором времени!</h1>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { isDescriptionAlert } = state.hat;\n  return { isDescriptionAlert };\n};\n\nconst mapDispatchToProps = {\n  hideHatDescriptionAlertAction: hideHatDescriptionAlert,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HatScreen);\n","export const HIDE_HAT_DESCRIPTION_ALERT = 'HIDE_HAT_DESCRIPTION_ALERT';\n\nexport function hideHatDescriptionAlert() {\n  return {\n    type: HIDE_HAT_DESCRIPTION_ALERT,\n  };\n}\n","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport Footer from '../components/Footer';\nimport CrystalBallScreen from '../screens/CrystalBallScreen';\nimport PredictionScreen from '../screens/PredictionScreen';\nimport HatScreen from '../screens/HatScreen';\n\nconst Router = () => {\n  return (\n    <HashRouter>\n      <Route exact path=\"/\" component={CrystalBallScreen} />\n      <Route path=\"/prediction\" component={PredictionScreen} />\n      <Route path=\"/hat\" component={HatScreen} />\n      <Footer />\n    </HashRouter>\n  );\n};\n\nexport default Router;\n","import { HIDE_MAGIC_BALL_DESCRIPTION_ALERT } from '../actions/magicBallAction';\n\nconst initialState = JSON.parse(localStorage.getItem('magicBall')) || {\n  isDescriptionAlert: true,\n};\n\nexport default function magicBallReducer(state = initialState, action) {\n  const { type } = action;\n\n  switch (type) {\n    case HIDE_MAGIC_BALL_DESCRIPTION_ALERT:\n      return { ...state, isDescriptionAlert: false };\n    default:\n      return state;\n  }\n}\n","import { HIDE_PREDICTION_DESCRIPTION_ALERT } from '../actions/predictionAction';\n\nconst initialState = JSON.parse(localStorage.getItem('prediction')) || {\n  isDescriptionAlert: true,\n};\n\nexport default function predictionReducer(state = initialState, action) {\n  const { type } = action;\n\n  switch (type) {\n    case HIDE_PREDICTION_DESCRIPTION_ALERT:\n      return { ...state, isDescriptionAlert: false };\n    default:\n      return state;\n  }\n}\n","import { HIDE_HAT_DESCRIPTION_ALERT } from '../actions/hatAction';\n\nconst initialState = JSON.parse(localStorage.getItem('hat')) || {\n  isDescriptionAlert: true,\n};\n\nexport default function hatReducer(state = initialState, action) {\n  const { type } = action;\n\n  switch (type) {\n    case HIDE_HAT_DESCRIPTION_ALERT:\n      return { ...state, isDescriptionAlert: false };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport magicBallReducer from './magicBall';\nimport predictionReducer from './prediction';\nimport hatReducer from './hat';\n\nconst rootReducer = combineReducers({\n  magicBall: magicBallReducer,\n  prediction: predictionReducer,\n  hat: hatReducer,\n});\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport rootReducer from '../reducers/index';\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","import React from 'react';\nimport GlobalStyle from './styles';\nimport Router from '../router';\nimport store from '../store/index';\nimport { Provider } from 'react-redux';\n\nconst App = () => {\n  return (\n    <>\n      <Provider store={store}>\n        <Router />\n        <GlobalStyle />\n      </Provider>\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/index';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}